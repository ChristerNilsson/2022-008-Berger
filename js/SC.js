// Generated by CoffeeScript 2.5.1
import {
  globals
} from './globals.js';

import {
  ALPHABET,
  setN,
  State
} from './states.js';

export var SC = class SC extends State { // Cirkel
  setN() {
    var R, angle, i, k, len, ref, x, y;
    R = 35;
    this.points = [];
    this.N = globals.N;
    angle = 360 / (this.N - 1);
    ref = range(this.N - 1);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      x = 50 + R * cos(angle * i);
      y = 50 + R * sin(angle * i);
      this.points.push([x, y]);
    }
    return this.points.push([50, 50]);
  }

  makeLine(i, j) {
    var x0, x1, y0, y1;
    [x0, y0] = this.points[i];
    [x1, y1] = this.points[j];
    return line(x0, y0, x1, y1);
  }

  draw() {
    var i, k, l, len, len1, m, players, r, ref, ref1, results, rond, x, y;
    //super()
    r = 2 * 100 / this.N;
    if (r > 12) {
      r = 12;
    }
    textSize(0.75 * r);
    rond = globals.rond;
    players = globals.ronder[rond];
    m = this.N / 2;
    ref = range(m + 1);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      this.makeLine(m - i, m + i - 1);
    }
    ref1 = range(this.N);
    results = [];
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      [x, y] = this.points[i];
      fill(players[i] === 0 ? 'red' : 'gray');
      circle(x, y, r);
      if (i === 0) {
        fill(['white', 'black'][i % 2]);
      } else if (i === this.N - 1) {
        fill(['white', 'black'][i % 2]);
      } else {
        fill(['white', 'black'][i % 2]);
      }
      results.push(text(ALPHABET[players[i]], x, y + 0.25));
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU0MuanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcU0MuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFBO0VBQVEsT0FBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLFFBQVI7RUFBa0IsSUFBbEI7RUFBd0IsS0FBeEI7Q0FBQSxNQUFBOztBQUVBLE9BQUEsSUFBYSxLQUFOLE1BQUEsR0FBQSxRQUFpQixNQUFqQixDQUFBO0VBRU4sSUFBTyxDQUFBLENBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQTtJQUFFLENBQUEsR0FBSTtJQUNKLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixJQUFDLENBQUEsQ0FBRCxHQUFLLE9BQU8sQ0FBQztJQUNiLEtBQUEsR0FBUSxHQUFBLEdBQUksQ0FBQyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQUo7QUFDWjtJQUFBLEtBQUEscUNBQUE7O01BQ0MsQ0FBQSxHQUFJLEVBQUEsR0FBRyxDQUFBLEdBQUUsR0FBQSxDQUFJLEtBQUEsR0FBTSxDQUFWO01BQ1QsQ0FBQSxHQUFJLEVBQUEsR0FBRyxDQUFBLEdBQUUsR0FBQSxDQUFJLEtBQUEsR0FBTSxDQUFWO01BQ1QsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQWEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFiO0lBSEQ7V0FJQSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBYSxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQWI7RUFUTTs7RUFXUCxRQUFXLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtBQUNaLFFBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUE7SUFBRSxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQUEsR0FBVSxJQUFDLENBQUEsTUFBTSxDQUFDLENBQUQ7SUFDakIsQ0FBQyxFQUFELEVBQUksRUFBSixDQUFBLEdBQVUsSUFBQyxDQUFBLE1BQU0sQ0FBQyxDQUFEO1dBQ2pCLElBQUEsQ0FBSyxFQUFMLEVBQVEsRUFBUixFQUFXLEVBQVgsRUFBYyxFQUFkO0VBSFU7O0VBS1gsSUFBTyxDQUFBLENBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsRUFBQSxDQUFBOztJQUNFLENBQUEsR0FBSSxDQUFBLEdBQUUsR0FBRixHQUFNLElBQUMsQ0FBQTtJQUNYLElBQUcsQ0FBQSxHQUFFLEVBQUw7TUFBYSxDQUFBLEdBQUUsR0FBZjs7SUFDQSxRQUFBLENBQVMsSUFBQSxHQUFLLENBQWQ7SUFDQSxJQUFBLEdBQU8sT0FBTyxDQUFDO0lBRWYsT0FBQSxHQUFVLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBRDtJQUV4QixDQUFBLEdBQUksSUFBQyxDQUFBLENBQUQsR0FBRztBQUNQO0lBQUEsS0FBQSxxQ0FBQTs7TUFBQSxJQUFDLENBQUEsUUFBRCxDQUFVLENBQUEsR0FBRSxDQUFaLEVBQWMsQ0FBQSxHQUFFLENBQUYsR0FBSSxDQUFsQjtJQUFBO0FBRUE7QUFBQTtJQUFBLEtBQUEsd0NBQUE7O01BQ0MsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBLEdBQVEsSUFBQyxDQUFBLE1BQU0sQ0FBQyxDQUFEO01BQ2YsSUFBQSxDQUFRLE9BQU8sQ0FBQyxDQUFELENBQVAsS0FBYyxDQUFqQixHQUF3QixLQUF4QixHQUFtQyxNQUF4QztNQUNBLE1BQUEsQ0FBTyxDQUFQLEVBQVMsQ0FBVCxFQUFXLENBQVg7TUFDQSxJQUFHLENBQUEsS0FBSyxDQUFSO1FBQWUsSUFBQSxDQUFLLENBQUMsT0FBRCxFQUFTLE9BQVQsQ0FBaUIsQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUF0QixFQUFmO09BQUEsTUFDSyxJQUFHLENBQUEsS0FBSyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQVg7UUFBa0IsSUFBQSxDQUFLLENBQUMsT0FBRCxFQUFTLE9BQVQsQ0FBaUIsQ0FBQyxDQUFBLEdBQUUsQ0FBSCxDQUF0QixFQUFsQjtPQUFBLE1BQUE7UUFDQSxJQUFBLENBQUssQ0FBQyxPQUFELEVBQVMsT0FBVCxDQUFpQixDQUFDLENBQUEsR0FBRSxDQUFILENBQXRCLEVBREE7O21CQUVMLElBQUEsQ0FBSyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUQsQ0FBUixDQUFiLEVBQTBCLENBQTFCLEVBQTRCLENBQUEsR0FBRSxJQUE5QjtJQVBELENBQUE7O0VBWk07O0FBbEJEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnbG9iYWxzfSBmcm9tICcuL2dsb2JhbHMuanMnXHJcbmltcG9ydCB7QUxQSEFCRVQsIHNldE4sIFN0YXRlfSBmcm9tICcuL3N0YXRlcy5qcydcclxuXHJcbmV4cG9ydCBjbGFzcyBTQyBleHRlbmRzIFN0YXRlICMgQ2lya2VsXHJcblxyXG5cdHNldE4gOiAtPlxyXG5cdFx0UiA9IDM1XHJcblx0XHRAcG9pbnRzID0gW11cclxuXHRcdEBOID0gZ2xvYmFscy5OXHJcblx0XHRhbmdsZSA9IDM2MC8oQE4tMSlcclxuXHRcdGZvciBpIGluIHJhbmdlIEBOLTFcclxuXHRcdFx0eCA9IDUwK1IqY29zIGFuZ2xlKmlcclxuXHRcdFx0eSA9IDUwK1Iqc2luIGFuZ2xlKmlcclxuXHRcdFx0QHBvaW50cy5wdXNoIFt4LHldXHJcblx0XHRAcG9pbnRzLnB1c2ggWzUwLDUwXVxyXG5cclxuXHRtYWtlTGluZSA6IChpLGopIC0+XHJcblx0XHRbeDAseTBdID0gQHBvaW50c1tpXVxyXG5cdFx0W3gxLHkxXSA9IEBwb2ludHNbal1cclxuXHRcdGxpbmUgeDAseTAseDEseTFcclxuXHJcblx0ZHJhdyA6IC0+XHJcblx0XHQjc3VwZXIoKVxyXG5cdFx0ciA9IDIqMTAwL0BOXHJcblx0XHRpZiByPjEyIHRoZW4gcj0xMlxyXG5cdFx0dGV4dFNpemUgMC43NSpyXHJcblx0XHRyb25kID0gZ2xvYmFscy5yb25kXHJcblxyXG5cdFx0cGxheWVycyA9IGdsb2JhbHMucm9uZGVyW3JvbmRdXHJcblxyXG5cdFx0bSA9IEBOLzJcclxuXHRcdEBtYWtlTGluZSBtLWksbStpLTEgZm9yIGkgaW4gcmFuZ2UgbSsxXHJcblx0XHRcdFxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgQE5cclxuXHRcdFx0W3gseV0gPSBAcG9pbnRzW2ldXHJcblx0XHRcdGZpbGwgaWYgcGxheWVyc1tpXSA9PSAwIHRoZW4gJ3JlZCcgZWxzZSAnZ3JheSdcclxuXHRcdFx0Y2lyY2xlIHgseSxyXHJcblx0XHRcdGlmIGkgPT0gMCB0aGVuIGZpbGwgWyd3aGl0ZScsJ2JsYWNrJ11baSUyXVxyXG5cdFx0XHRlbHNlIGlmIGkgPT0gQE4tMSB0aGVuIGZpbGwgWyd3aGl0ZScsJ2JsYWNrJ11baSUyXVxyXG5cdFx0XHRlbHNlIGZpbGwgWyd3aGl0ZScsJ2JsYWNrJ11baSUyXVxyXG5cdFx0XHR0ZXh0IEFMUEhBQkVUW3BsYXllcnNbaV1dLHgseSswLjI1XHJcbiJdfQ==
//# sourceURL=c:\github\2022-008-Berger\coffee\SC.coffee