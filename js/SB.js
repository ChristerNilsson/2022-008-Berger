// Generated by CoffeeScript 2.5.1
import {
  globals
} from './globals.js';

import {
  ALPHABET,
  setN,
  State
} from './states.js';

export var SB = class SB extends State { // Cirkel
  setN() {
    var R, angle, i, k, len, ref, x, y;
    R = 35;
    this.points = [];
    this.N = globals.N;
    angle = 360 / (this.N - 1);
    ref = range(this.N - 1);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      x = 50 + R * cos(angle * i);
      y = 50 + R * sin(angle * i);
      this.points.push([x, y]);
    }
    return this.points.push([50, 50]);
  }

  makeLine(i, j) {
    var x0, x1, y0, y1;
    [x0, y0] = this.points[i];
    [x1, y1] = this.points[j];
    return line(x0, y0, x1, y1);
  }

  draw() {
    var i, k, l, len, len1, m, players, r, ref, ref1, results, rond, x, y;
    super.draw();
    r = 2 * 100 / this.N;
    if (r > 12) {
      r = 12;
    }
    textSize(0.75 * r);
    rond = globals.rond;
    players = globals.ronder[rond];
    m = this.N / 2;
    ref = range(m + 1);
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      this.makeLine(m - i, m + i - 1);
    }
    ref1 = range(this.N);
    results = [];
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      [x, y] = this.points[i];
      fill(players[i] === 0 ? 'red' : 'gray');
      circle(x, y, r);
      if (i === 0) {
        fill(['white', 'black'][i % 2]);
      } else if (i === this.N - 1) {
        fill(['white', 'black'][i % 2]);
      } else {
        fill(['white', 'black'][i % 2]);
      }
      results.push(text(ALPHABET[players[i]], x, y + 0.25));
    }
    return results;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU0IuanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcU0IuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFBO0VBQVEsT0FBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLFFBQVI7RUFBa0IsSUFBbEI7RUFBd0IsS0FBeEI7Q0FBQSxNQUFBOztBQUVBLE9BQUEsSUFBYSxLQUFOLE1BQUEsR0FBQSxRQUFpQixNQUFqQixDQUFBO0VBRU4sSUFBTyxDQUFBLENBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxLQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQTtJQUFFLENBQUEsR0FBSTtJQUNKLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixJQUFDLENBQUEsQ0FBRCxHQUFLLE9BQU8sQ0FBQztJQUNiLEtBQUEsR0FBUSxHQUFBLEdBQUksQ0FBQyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQUo7QUFDWjtJQUFBLEtBQUEscUNBQUE7O01BQ0MsQ0FBQSxHQUFJLEVBQUEsR0FBRyxDQUFBLEdBQUUsR0FBQSxDQUFJLEtBQUEsR0FBTSxDQUFWO01BQ1QsQ0FBQSxHQUFJLEVBQUEsR0FBRyxDQUFBLEdBQUUsR0FBQSxDQUFJLEtBQUEsR0FBTSxDQUFWO01BQ1QsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLENBQWEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFiO0lBSEQ7V0FJQSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsQ0FBYSxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQWI7RUFUTTs7RUFXUCxRQUFXLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtBQUNaLFFBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBLEVBQUE7SUFBRSxDQUFDLEVBQUQsRUFBSSxFQUFKLENBQUEsR0FBVSxJQUFDLENBQUEsTUFBTSxDQUFDLENBQUQ7SUFDakIsQ0FBQyxFQUFELEVBQUksRUFBSixDQUFBLEdBQVUsSUFBQyxDQUFBLE1BQU0sQ0FBQyxDQUFEO1dBQ2pCLElBQUEsQ0FBSyxFQUFMLEVBQVEsRUFBUixFQUFXLEVBQVgsRUFBYyxFQUFkO0VBSFU7O0VBS1gsSUFBTyxDQUFBLENBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsRUFBQTtTQURDLENBQUEsSUFDQyxDQUFBO0lBQ0EsQ0FBQSxHQUFJLENBQUEsR0FBRSxHQUFGLEdBQU0sSUFBQyxDQUFBO0lBQ1gsSUFBRyxDQUFBLEdBQUUsRUFBTDtNQUFhLENBQUEsR0FBRSxHQUFmOztJQUNBLFFBQUEsQ0FBUyxJQUFBLEdBQUssQ0FBZDtJQUNBLElBQUEsR0FBTyxPQUFPLENBQUM7SUFFZixPQUFBLEdBQVUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFEO0lBRXhCLENBQUEsR0FBSSxJQUFDLENBQUEsQ0FBRCxHQUFHO0FBQ1A7SUFBQSxLQUFBLHFDQUFBOztNQUFBLElBQUMsQ0FBQSxRQUFELENBQVUsQ0FBQSxHQUFFLENBQVosRUFBYyxDQUFBLEdBQUUsQ0FBRixHQUFJLENBQWxCO0lBQUE7QUFFQTtBQUFBO0lBQUEsS0FBQSx3Q0FBQTs7TUFDQyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUEsR0FBUSxJQUFDLENBQUEsTUFBTSxDQUFDLENBQUQ7TUFDZixJQUFBLENBQVEsT0FBTyxDQUFDLENBQUQsQ0FBUCxLQUFjLENBQWpCLEdBQXdCLEtBQXhCLEdBQW1DLE1BQXhDO01BQ0EsTUFBQSxDQUFPLENBQVAsRUFBUyxDQUFULEVBQVcsQ0FBWDtNQUNBLElBQUcsQ0FBQSxLQUFLLENBQVI7UUFBZSxJQUFBLENBQUssQ0FBQyxPQUFELEVBQVMsT0FBVCxDQUFpQixDQUFDLENBQUEsR0FBRSxDQUFILENBQXRCLEVBQWY7T0FBQSxNQUNLLElBQUcsQ0FBQSxLQUFLLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBWDtRQUFrQixJQUFBLENBQUssQ0FBQyxPQUFELEVBQVMsT0FBVCxDQUFpQixDQUFDLENBQUEsR0FBRSxDQUFILENBQXRCLEVBQWxCO09BQUEsTUFBQTtRQUNBLElBQUEsQ0FBSyxDQUFDLE9BQUQsRUFBUyxPQUFULENBQWlCLENBQUMsQ0FBQSxHQUFFLENBQUgsQ0FBdEIsRUFEQTs7bUJBRUwsSUFBQSxDQUFLLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBRCxDQUFSLENBQWIsRUFBMEIsQ0FBMUIsRUFBNEIsQ0FBQSxHQUFFLElBQTlCO0lBUEQsQ0FBQTs7RUFaTTs7QUFsQkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2dsb2JhbHN9IGZyb20gJy4vZ2xvYmFscy5qcydcclxuaW1wb3J0IHtBTFBIQUJFVCwgc2V0TiwgU3RhdGV9IGZyb20gJy4vc3RhdGVzLmpzJ1xyXG5cclxuZXhwb3J0IGNsYXNzIFNCIGV4dGVuZHMgU3RhdGUgIyBDaXJrZWxcclxuXHJcblx0c2V0TiA6IC0+XHJcblx0XHRSID0gMzVcclxuXHRcdEBwb2ludHMgPSBbXVxyXG5cdFx0QE4gPSBnbG9iYWxzLk5cclxuXHRcdGFuZ2xlID0gMzYwLyhATi0xKVxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgQE4tMVxyXG5cdFx0XHR4ID0gNTArUipjb3MgYW5nbGUqaVxyXG5cdFx0XHR5ID0gNTArUipzaW4gYW5nbGUqaVxyXG5cdFx0XHRAcG9pbnRzLnB1c2ggW3gseV1cclxuXHRcdEBwb2ludHMucHVzaCBbNTAsNTBdXHJcblxyXG5cdG1ha2VMaW5lIDogKGksaikgLT5cclxuXHRcdFt4MCx5MF0gPSBAcG9pbnRzW2ldXHJcblx0XHRbeDEseTFdID0gQHBvaW50c1tqXVxyXG5cdFx0bGluZSB4MCx5MCx4MSx5MVxyXG5cclxuXHRkcmF3IDogLT5cclxuXHRcdHN1cGVyKClcclxuXHRcdHIgPSAyKjEwMC9ATlxyXG5cdFx0aWYgcj4xMiB0aGVuIHI9MTJcclxuXHRcdHRleHRTaXplIDAuNzUqclxyXG5cdFx0cm9uZCA9IGdsb2JhbHMucm9uZFxyXG5cclxuXHRcdHBsYXllcnMgPSBnbG9iYWxzLnJvbmRlcltyb25kXVxyXG5cclxuXHRcdG0gPSBATi8yXHJcblx0XHRAbWFrZUxpbmUgbS1pLG0raS0xIGZvciBpIGluIHJhbmdlIG0rMVxyXG5cdFx0XHRcclxuXHRcdGZvciBpIGluIHJhbmdlIEBOXHJcblx0XHRcdFt4LHldID0gQHBvaW50c1tpXVxyXG5cdFx0XHRmaWxsIGlmIHBsYXllcnNbaV0gPT0gMCB0aGVuICdyZWQnIGVsc2UgJ2dyYXknXHJcblx0XHRcdGNpcmNsZSB4LHksclxyXG5cdFx0XHRpZiBpID09IDAgdGhlbiBmaWxsIFsnd2hpdGUnLCdibGFjayddW2klMl1cclxuXHRcdFx0ZWxzZSBpZiBpID09IEBOLTEgdGhlbiBmaWxsIFsnd2hpdGUnLCdibGFjayddW2klMl1cclxuXHRcdFx0ZWxzZSBmaWxsIFsnd2hpdGUnLCdibGFjayddW2klMl1cclxuXHRcdFx0dGV4dCBBTFBIQUJFVFtwbGF5ZXJzW2ldXSx4LHkrMC4yNVxyXG4iXX0=
//# sourceURL=c:\github\2022-008-Berger\coffee\SB.coffee